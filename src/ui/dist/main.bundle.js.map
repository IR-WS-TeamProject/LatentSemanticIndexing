{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/document.service.ts","webpack:///./src/app/search-results.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".content, input {\\n\\tmargin: 0 0 0 20px;\\n}\\n\\ninput {\\n\\tfont-size: 1.2em;\\n\\tborder: none;\\n}\\n\\nul {\\n\\tlist-style-type: none;\\n\\tpadding: 0;\\n\\tmargin: 15px 0 0 0;\\n\\twidth: 40%;\\n\\tfloat: left;\\n}\\n\\nli {\\n\\tmargin: 0 0 8px 0;\\n\\tbackground-color: white;\\n\\tpadding: 7px 15px 10px 15px;\\n}\\n\\nli:hover {\\n\\tbox-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\\n}\\n\\nli h2 {\\n\\tmargin: 0 0 4px 0;\\n}\\n\\n.document {\\n\\twhite-space: pre-wrap;\\n\\tfloat: right;\\n\\twidth: 40%;\\n\\tmargin: 0 15% 0 0;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 136\n// module chunks = 1","module.exports = \"<div class=\\\"app\\\">\\n\\t<h1>\\n\\t\\t{{title}}\\n\\t</h1>\\n\\t<input [(ngModel)]=\\\"query\\\" placeholder=\\\"Query\\\" (keyup.enter)=\\\"updateSearchResults(query)\\\">\\n\\t<button (click)=\\\"switchMode()\\\">{{buttonText}}</button><span>{{labelText}}</span>\\n\\t<div class=\\\"content\\\">\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let result of results\\\">\\n\\t\\t\\t\\t<a (click)=\\\"updateDocument(result.doc)\\\">\\n\\t\\t\\t\\t\\t<h2>{{result.doc}}</h2>\\n\\t\\t\\t\\t\\t<p>{{result.rank}}</p>\\n\\t\\t\\t  \\t</a>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t\\t<div class=\\\"document\\\">\\n\\t\\t\\t{{document}}\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 138\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http'\n\nimport 'rxjs/add/operator/toPromise'\n\n@Injectable()\nexport class DocumentService {\n\n\tprivate apiUrl: string = '/api?doc='\n\n  constructor(private http: Http) { }\n\n  getDocument(documentPath: string): Promise<string> {\n    console.log(`Get document ${documentPath}`)\n  \tconst url = `${this.apiUrl}${documentPath}`\n  \treturn this.http.get(url)\n      .toPromise()\n      .then(response => response.text())\n    \t.catch(this.handleError)\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.message || error)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/document.service.ts","import { Injectable } from '@angular/core'\nimport { Http } from '@angular/http'\n\nimport 'rxjs/add/operator/toPromise'\n\nimport { SearchResult } from './search-result'\nimport { SEARCH_RESULTS } from './search-results.mock'\n\n@Injectable()\nexport class SearchResultsService {\n\n\tprivate apiUrl: string = '/api?query='\n\n  constructor(private http: Http) { }\n\n  getSearchResults(query: string, withSVD: boolean = true): Promise<SearchResult[]> {\n    console.log(`Find documents for: ${query}`)\n  \t// return Promise.resolve(SEARCH_RESULTS)\n\tconst url = `${this.apiUrl}${encodeURI(query)}&svd=${withSVD}`\n  \treturn this.http.get(url)\n     .toPromise()\n     .then(response => response.json() as SearchResult[])\n     .catch(this.handleError)\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.message || error)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/search-results.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 73;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 73\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core'\n\nimport { SearchResult } from './search-result'\nimport { SearchResultsService } from './search-results.service'\nimport { DocumentService } from './document.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private title = 'Latent Semantic Indexing Search'\n  private query: string = null\n  private results: SearchResult[] = null\n  private document: string = ''\n  private buttonText: string = 'Use VSM'\n  private labelText: string = 'SVD Mode'\n  private svdMode: boolean = true\n\n  constructor(\n    private searchResultService: SearchResultsService,\n    private documentService: DocumentService\n  ) { }\n\n  ngOnInit() {\n  \t/* this.searchResultService.getSearchResults('initial query?')\n  \t\t.then(searchResults => this.results = searchResults)\n      .catch(() => {}) // nice error handling tho */\n  }\n\n  updateSearchResults(query: string): void {\n    this.searchResultService.getSearchResults(query, this.svdMode)\n      .then(searchResults => this.results = searchResults)\n      .catch(() => {}) // nice error handling tho\n  }\n\n  updateDocument(documentPath: string): void {\n    this.documentService.getDocument(documentPath)\n      .then(document => this.document = document)\n      .catch(() => {})\n  }\n\n  switchMode(): void {\n    this.svdMode = !this.svdMode\n    if (this.svdMode) {\n      this.buttonText = 'Use VSM'\n      this.labelText = 'SVD Mode'\n    } else {\n      this.buttonText = 'Use SVD'\n      this.labelText = 'VSM Mode'\n    } \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http'\n\nimport { AppComponent } from './app.component'\nimport { SearchResultsService } from './search-results.service'\nimport { DocumentService } from './document.service'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [ \n    SearchResultsService,\n    DocumentService\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}